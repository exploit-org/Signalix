package org.exploit.signalix.core;

import org.apache.kafka.clients.producer.KafkaProducer;
import org.apache.kafka.clients.producer.ProducerRecord;
import org.exploit.signalix.model.KafkaWiredEvent;
import org.exploit.signalix.utils.UtilityMethods;

public class KafkaEventProducer extends KafkaProducer<String, String> {
    private final KafkaEventManager eventManager;

    public KafkaEventProducer(KafkaEventManager eventManager) {
        super(eventManager.getProperties());
        this.eventManager = eventManager;
    }

    public void sendEvent(KafkaWiredEvent e) {
        try {
            var event = e.event();
            var meta = e.meta();

            var topic = meta.topic();
            var name = event.getClass().getName();
            var value = eventManager.getEventObjectMapper().writeValueAsString(event);

            var partition = meta.partition() != -1 ? meta.partition() : null;
            var headers = UtilityMethods.extractHeaders(meta);

            send(new ProducerRecord<>(topic, partition, name, value, headers));
        } catch (Exception exception) {
            throw new IllegalStateException("Couldn't produce kafka event", exception);
        }
    }
}
